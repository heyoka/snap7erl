%%%-------------------------------------------------------------------
%%% @author heyoka
%%% @copyright (C) 2022, <COMPANY>
%%% @doc
%%%
%%% @end
%%% Created : 18. Aug 2022 11:49
%%% links to resources about the protocol
%%% https://www.tanindustrie.de/fr/Help/ConfigClient/tsap_s7.htm
%%% https://github.com/mushorg/conpot/blob/master/conpot/protocols/s7comm/cotp.py
%%% https://javamana.com/2022/137/202205170826321818.html
%%% https://plc4x.apache.org/protocols/s7/index.html
%%%-------------------------------------------------------------------
-author("heyoka").


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% TPKT Header
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
-define(TPKT_HEADER_LENGTH, 4).

%% 0 -> Version (0x03),
%% 1 -> Reserved (0x00),
%% 2-3 -> Length (0x0016)

-define(TPKT_VERSION, 16#03).
-define(TPKT_LENGTH, 16#0016).

-define(TPKT_HEADER, <<?TPKT_VERSION, 16#00, ?TPKT_LENGTH:16>>).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% COTP Structure
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
-define(COTP_CONNECT_LENGTH, 17). %% not including the length field itself

%% COTP There are two kinds , Connected COTP And data COTP


%%% COTP Connect 18 bytes

%% 0 - 1 -> Length (not including this field) (0x11)

%% 1 - 1 -> PDU type （CRConnect Request Connection request ）
%%          0xE0, Connection request
%%          0xD0, Connect to confirm
%%          0x80, Disconnect request
%%          0xC0, Disconnect confirmation
%%          0x50, Refuse
%%          0xf0, data

%% 2-3 - 2 -> Target reference , Used to uniquely identify the target (0x10)
%% 4-5 - 2 -> Source reference
%% 6 - 1 -> Class front 4 position extended formats Last but not least 2 position ...
%% 7 - 1 -> Parameter code：tpdu-size (0xC0)
%% 8 - 1 -> Parameter length
%% 9 - 1 -> TPDU size (0x0A)
%% 10 - 1 -> Parameter code: src-tsap (0xC1)
%% 11 - 1 -> Parameter length (0x02)
%% 12-13 - 2 -> SourceTSAP/Rack (0x0201)
%% 14 - 1 -> Parameter code: dst-tsap
%% 15 - 1 -> Parameter length
%% 16-17 - 2 -> DestinationTSAP / Slot (0x0201)

-define(COTP_HEADER_PDU_TYPE_CONN_REQ, 16#e0).
-define(COTP_HEADER_PDU_TYPE_CONN_CONFIRM, 16#d0).
-define(COTP_HEADER_PDU_TYPE_DISCONN_REQ, 16#80).
-define(COTP_HEADER_PDU_TYPE_DISCONN_CONFIRM, 16#c0).
%%-define(COTP_HEADER_PDU_TYPE_REFUSE, 16#50).
-define(COTP_HEADER_PDU_TYPE_DATA, 16#f0).

-define(COTP_HEADER_PDU_PARAM_CODE_TPDUSIZE, 16#c0).
-define(COTP_HEADER_PDU_TPDUSIZE, 16#0a).
-define(COTP_HEADER_PDU_PARAM_CODE_SRC_TSAP, 16#c1).
-define(COTP_HEADER_PDU_PARAM_CODE_DEST_TSAP, 16#c2).
-define(COTP_HEADER_PDU_PARAM_LENGTH, 2).

-define(LOCAL_TSAP, 16#0100).

-define(COTP_DATA_LENGTH, 3).

%%% COTP Data 3 bytes

%% 0 - 1 -> Length, not including this field (0x11)

%% 1 - 1 -> PDU type （CRConnect Request Connection request ）
%%          0x0e, Connection request
%%          0x0d, Connect to confirm
%%          0x08, Disconnect request
%%          0x0c, Disconnect confirmation
%%          0x05, Refuse

%% 2 - 1 -> Destination reference First place ： Whether the last data after 7 position ： TPDU** Number

%%-define(COTP_PDU_TYPE_CONN_REQ, 16#0e).
%%-define(COTP_PDU_TYPE_CONN_CONFIRM, 16#0d).
%%-define(COTP_PDU_TYPE_DISCONN_REQ, 16#08).
%%-define(COTP_PDU_TYPE_DISCONN_CONFIRM, 16#0c).
%%-define(COTP_PDU_TYPE_REFUSE, 16#05).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% S7 PDU Structure
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
-define(S7PDU_MAX_REF_ID, 16#ffff).

%% Header - Parameters - Data

%% Header -> Contains length information ,PDU Reference and message type constants
%% Parameters -> The content and structure are based on PDU There are great differences between the types of messages and functions
%% Data -> The data is an optional field to carry the data , For example, memory value , Block code , Firmware data, etc .

-define(S7PDU_REQ_HEADER_LENGTH, 10).
%% The response message contains two additional error code bytes (Error Class, Error Code)
-define(S7PDU_RESP_HEADER_LENGTH, 12).

-define(S7PDU_PROTOCOL_ID, 16#32).
-define(S7PDU_MAX_PDUSIZE, 960).
%%%%%%%%%%%%%%%%%%%%% REQ-HEADER

%% 0 - 1 -> Protocol Id always 0x32（ Constant ）
%% 1 - 1 -> ROSCTR/MSG Type // pdu（Protocol Data Unit） The type of
%%          0x01-job
%%          0x02-ack
%%          0x03-ack-data
%%          0x07-Userdata
%% 2-3 - 2 -> Redundancy Identification (Retain)
%% 4-5 - 2 -> Protocol Data Unit Reference // |pdu The reference of – Generated by the master station , Each new transmission is incremented （ Big end ）
%% 6-7 - 2 -> Parameter length, Big endian
%% 8-9 - 2 -> Data length, Big endian

-define(S7PDU_ROSCTR_JOB,       16#01).
-define(S7PDU_ROSCTR_ACK,       16#02).
-define(S7PDU_ROSCTR_ACK_DATA,  16#03).
-define(S7PDU_ROSCTR_USERDATA,  16#07).

-define(S7PDU_FUNCTION_READ_VAR, 16#04).
-define(S7PDU_FUNCTION_WRITE_VAR, 16#05).

-define(S7PDU_TRANSPORT_TYPE,
  [
    {bit, 1},
    {byte, 2},
    {char, 3},
    {word, 4},
    {int, 5},
    {dword, 6},
    {dint, 7},
    {real, 8},
    {date, 9},
    {tod, 10},
    {time, 11},
    {counter, 16#1c}
  ]).

-define(S7PDU_AREA, [
  {inputs, 16#81},
  {outputs, 16#82},
  {flags, 16#83},
  {db, 16#84},
  {s7counters, 16#1c},
  {s7timers, 16#1d}
]).

%%%%%%%%%%%%%%%%%%%%% ACK-HEADER


%% 0 - 1 -> Protocol Id always 0x32（ Constant ）
%% 1 - 1 -> ROSCTR/MSG Type // pdu（Protocol Data Unit） The type of
%%          0x01-job
%%          0x02-ack
%%          0x03-ack-data
%%          0x07-Userdata
%% 2-3 - 2 -> Redundancy Identification (Retain)
%% 4-5 - 2 -> Protocol Data Unit Reference // |pdu The reference of – Generated by the master station , Each new transmission is incremented （ Big end ）
%% 6-7 - 2 -> Parameter length, Big endian
%% 8-9 - 2 -> Data length, Big endian
%% 10 - 1 -> Error Class
%% 11 - 1 -> Error Code




%% tcp request record
-record(tcp_request, {sock, tid = 1, address = 1, function, start, data , ts}).
